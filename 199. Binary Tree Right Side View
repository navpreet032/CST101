/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
vector<int>ans;
void dfs(TreeNode* root, int h){
    if(root == NULL)return;

    if(h == ans.size()){
        ans.push_back(root->val);
    }
    dfs(root->right, h+1);// go right first <bec we have to find rigth side>
    dfs(root->left, h+1);
}
    vector<int> rightSideView(TreeNode* root) {
        if(root == NULL)return ans;
        dfs(root,0);
        return ans;

    }
};
