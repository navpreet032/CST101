/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
       if(root == NULL)
        return NULL;

        stack<TreeNode*>q;

        q.push(root->left);
        q.push(root->right);

        while(!q.empty()){
            TreeNode* left = q.top();

            q.pop();

            TreeNode* right = q.top();

            q.pop();

            if(left == NULL and right == NULL){
                continue;
            }
            if( left == NULL or right == NULL ){
                return false;
            }

            if( left->val != right->val ){
                return false;
            }
            
            q.push(left->left);
            q.push(right->right);
            q.push(left->right);
            q.push(right->left);

        } 
        return true;
    }
};
 
